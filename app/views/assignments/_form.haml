.small-12
  - if @assignment.errors.any?
    .alert-box.alert.radius
      .italic= "#{pluralize(@assignment.errors.count, "error")} prohibited this #{term_for :assignment} from being saved:"
      %ul
        - @assignment.errors.full_messages.each do |msg|
          %li= msg

  %br
  .small-12.panel.columns
    = render 's3_uploader'

  = simple_form_for(@assignment) do |f|

    .small-12.large-4.columns.columns-no-padding_right.right
      .panel
        %h4 SETTINGS
        .small-12
          %label.checkbox
            = f.label :visible, "Visible to students"
            %i.fi-eye
            = f.check_box :visible
            .form_label Can #{term_for :students} see this #{term_for :assignment} in their dashboard?

        .small-12
          %label.checkbox
            = f.label :required
            %i.fi-star
            = f.check_box :required
            .form_label Are ALL #{term_for :students} expected to complete this #{term_for :assignment} to pass the course?


        - if current_course.accepts_submissions?
          .small-12
            .checkbox
              = f.label :accepts_submissions #{term_for :assignment} Submissions
              %i.fi-paperclip
              = f.check_box :accepts_submissions
              .form_label Will you be using GradeCraft to accept submissions for this #{term_for :assignment}?

          .small-12
            .checkbox
              = f.label :resubmissions_allowed #{term_for :assignment} Resubmissions
              %i.fi-loop
              = f.check_box :resubmissions_allowed
              .form_label Can #{term_for :students} resubmit this #{term_for :assignment}?

        .small-12
          .checkbox
            = f.label :student_logged
            %i.fi-pencil
            = f.check_box :student_logged
            .form_label Do #{term_for :students} self-report their grade for this #{term_for :assignment}?

        .small-12
          .checkbox
            = f.label :release_necessary
            %i.fi-unlock
            = f.check_box :release_necessary
            .form_label Do you want to release all grades at once? This is particularly useful for situations where extensive feedback is important.

        .small-12
          .checkbox
            = f.label :notify_released, "Notify by email?"
            %i.fi-mail
            = f.check_box :notify_released
            .form_label Do you want to notify students by email when a grade is awarded? If grade release is necessary, this email will not be sent out until the grade is officially released.
        .small-12
          .checkbox
            = f.label :include_in_timeline, "Timeline"
            %i.fi-layout
            = f.check_box :include_in_timeline, {"aria-describedby" => "txtIncludeInTimeline"}
            .form_label{:id => "txtIncludeInTimeline"} Can #{term_for :students} see this #{term_for :assignment} in the course timeline? Note that #{term_for :assignments} without open or due dates will be excluded automatically.

        .small-12
          .checkbox
            = f.label :include_in_predictor, "Predictor"
            %i.fi-checkbox
            = f.check_box :include_in_predictor
            .form_label Can #{term_for :students} see this #{term_for :assignment} in the grade predictor?
        .small-12
          .checkbox
            = f.label :include_in_to_do, "To Do List"
            %i.fi-checkbox
            = f.check_box :include_in_to_do
            .form_label Can #{term_for :students} see this #{term_for :assignment} in the to do list?

      .panel
        %h4.uppercase Timeline

        .small-12
          = f.label :media, "Image"
          = f.file_field :media
          - if @assignment.media?
            %img{:src => @assignment.media, :width => 40, :alt => "Primary Assignment Image" }
            = f.check_box :remove_media
            Remove Image

        .small-12
          = f.label :thumbnail
          = f.file_field :thumbnail
          - if @assignment.thumbnail.present?
            %img{:src => @assignment.thumbnail, :alt => "Thumbnail Assignment Image", :style => "height: 25px; width: 25px;" }
            = f.check_box :remove_thumbnail
            Remove Thumbnail

        .small-12
          = f.label :media_credit, "Media Credit"
          = f.text_field :media_credit

        .small-12
          = f.label :media_caption, "Caption"
          = f.text_field :media_caption

    .small-12.large-8.columns.panel
      %h4.uppercase Basic Info
      .small-12
        .small-12.large-8.columns
          = f.association :assignment_type, :collection => current_course.assignment_types

      .small-12

        .small-12.large-8.columns
          = f.label :name
          = f.text_field :name

        .small-12.large-4.columns
          = f.label :point_total, "Total Points Possible"
          = f.text_field :point_total

      .small-12.large-12

        .small-12.large-4.columns
          = f.input :open_at, as: :string, :include_blank => true, :input_html => { :class => 'datetimepicker', :value => @assignment.try(:open_at) }

        .small-12.large-4.columns
          = f.input :due_at, as: :string, :include_blank => true, :input_html => { :class => 'datetimepicker', :value => @assignment.try(:due_at) }

        .small-12.large-4.columns
          = f.input :accepts_submissions_until, as: :string, :include_blank => true, :input_html => { :class => 'datetimepicker', :value => @assignment.try(:accepts_submissions_until) }, :label => "Accept until"


      .small-12
        .small-12.large-8.columns
          = f.label :grade_scope, "Do students do this individually or as a group?"
          = f.select :grade_scope, [["Individual"], ["Group"]]

      .small-12
        .small-12.large-8.columns
          = f.label :mass_grade_type, "How should this assignment appear in Quick Grade?"
          = f.select :mass_grade_type, [[],["Checkbox"], ["Select List"], ["Radio Buttons"], ["Text"]]

      .small-12
        .small-12.large-8.columns
          = f.label :points_predictor_display, "How should this assignment appear in the Grade Predictor?"
          = f.select :points_predictor_display, [[], ["Checkbox", "Fixed"], ["Select List"], ["Slider"], ]

    .small-12.medium-8.columns.textarea.panel
      %h4.uppercase Assignment Description
      %label.small-12
        .sr-only Description
        = f.bootsy_area :description
      .form_label
        %span This will be shown to students on their dashboard, and when they submit their assignment.

    .small-12.large-8.columns.panel
      %h4.uppercase Grade Levels
      .assignment-score-levels
        %p.hint Example: You could create three levels to produce a quick grading scheme for just this #{term_for :assignment} - Complete (5000 points), Finalist (7000 points), and Winner (10,000 points). These levels will then show in the quick grade, and when students are setting goals in the grade predictor.
        %script(id="assignment-score-level-template" type="text/x-template")
          %fieldset.assignment-score-level
            = f.simple_fields_for :assignment_score_levels, AssignmentScoreLevel.new, class: 'form-inline', child_index: 'child_index' do |slf|
              = render 'assignment_score_level_fields', f: slf
        - @assignment.assignment_score_levels.order_by_value.each do |assignment_score_level|
          %fieldset.assignment-score-level
            = f.simple_fields_for :assignment_score_levels, assignment_score_level, class: 'form-inline' do |slf|
              = render 'assignment_score_level_fields', f: slf
      = link_to 'Add a Level', '#', class: 'add-assignment-score-level button radius'

      = f.simple_fields_for :assignment_files, @assignment.assignment_files.new do |aff|
        = aff.input :filepath, :input_html => { :class => 's3_files' }, :as => :hidden

    .clearfix

    .button-bar
      %ul.button-group.radius.right
        %li= f.button :submit, "#{@assignment.persisted? ? 'Update' : 'Create'} #{term_for :assignment}"
        %li= link_to 'Cancel', assignments_path, :class => "button"


